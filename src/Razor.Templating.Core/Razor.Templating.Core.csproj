<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <CopyRefAssembliesToPublishDirectory>true</CopyRefAssembliesToPublishDirectory>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>Render your .cshtml files to string. Works out of the box for Web, Console, Worker Service, Desktop Apps in .NET Core.</Description>
    <RepositoryUrl>https://github.com/soundaranbu/RazorTemplating</RepositoryUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Copyright />
    <PackageProjectUrl>https://github.com/soundaranbu/RazorTemplating</PackageProjectUrl>
    <Authors>Soundar Anbalagan</Authors>
    <Version>1.8.0</Version>
    <RepositoryType>git</RepositoryType>
    <PackageTags>razor-templating,html-templatingrazor,render,dotnet-core,core,template-engine,email,emails,razor-view-to-string-renderer, razor-view-engine</PackageTags>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageReleaseNotes>
      - Added IRazorTemplateEngine interface that can be used for constructor dependency injection instead of using a static class.
    </PackageReleaseNotes>
    <Nullable>Enable</Nullable>
  </PropertyGroup>
  
  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>
  
  <ItemGroup>
    <None Include="assets\icon.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>
</Project>